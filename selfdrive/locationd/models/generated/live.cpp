#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                      Code generated with SymPy 1.11.1                      *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_5821450610139912524) {
   out_5821450610139912524[0] = 0;
   out_5821450610139912524[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_5821450610139912524[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_5821450610139912524[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_5821450610139912524[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_5821450610139912524[5] = -sin(in_vec[1]);
   out_5821450610139912524[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_5821450610139912524[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_5821450610139912524[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_5821450610139912524[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_5821450610139912524[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_5821450610139912524[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_5821450610139912524[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_5821450610139912524[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_5821450610139912524[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_5821450610139912524[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_5821450610139912524[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_5821450610139912524[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_8199502743948441299) {
   out_8199502743948441299[0] = delta_x[0] + nom_x[0];
   out_8199502743948441299[1] = delta_x[1] + nom_x[1];
   out_8199502743948441299[2] = delta_x[2] + nom_x[2];
   out_8199502743948441299[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_8199502743948441299[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_8199502743948441299[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_8199502743948441299[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_8199502743948441299[7] = delta_x[6] + nom_x[7];
   out_8199502743948441299[8] = delta_x[7] + nom_x[8];
   out_8199502743948441299[9] = delta_x[8] + nom_x[9];
   out_8199502743948441299[10] = delta_x[9] + nom_x[10];
   out_8199502743948441299[11] = delta_x[10] + nom_x[11];
   out_8199502743948441299[12] = delta_x[11] + nom_x[12];
   out_8199502743948441299[13] = delta_x[12] + nom_x[13];
   out_8199502743948441299[14] = delta_x[13] + nom_x[14];
   out_8199502743948441299[15] = delta_x[14] + nom_x[15];
   out_8199502743948441299[16] = delta_x[15] + nom_x[16];
   out_8199502743948441299[17] = delta_x[16] + nom_x[17];
   out_8199502743948441299[18] = delta_x[17] + nom_x[18];
   out_8199502743948441299[19] = delta_x[18] + nom_x[19];
   out_8199502743948441299[20] = delta_x[19] + nom_x[20];
   out_8199502743948441299[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_8974206346724261763) {
   out_8974206346724261763[0] = -nom_x[0] + true_x[0];
   out_8974206346724261763[1] = -nom_x[1] + true_x[1];
   out_8974206346724261763[2] = -nom_x[2] + true_x[2];
   out_8974206346724261763[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_8974206346724261763[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_8974206346724261763[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_8974206346724261763[6] = -nom_x[7] + true_x[7];
   out_8974206346724261763[7] = -nom_x[8] + true_x[8];
   out_8974206346724261763[8] = -nom_x[9] + true_x[9];
   out_8974206346724261763[9] = -nom_x[10] + true_x[10];
   out_8974206346724261763[10] = -nom_x[11] + true_x[11];
   out_8974206346724261763[11] = -nom_x[12] + true_x[12];
   out_8974206346724261763[12] = -nom_x[13] + true_x[13];
   out_8974206346724261763[13] = -nom_x[14] + true_x[14];
   out_8974206346724261763[14] = -nom_x[15] + true_x[15];
   out_8974206346724261763[15] = -nom_x[16] + true_x[16];
   out_8974206346724261763[16] = -nom_x[17] + true_x[17];
   out_8974206346724261763[17] = -nom_x[18] + true_x[18];
   out_8974206346724261763[18] = -nom_x[19] + true_x[19];
   out_8974206346724261763[19] = -nom_x[20] + true_x[20];
   out_8974206346724261763[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_2259405359203808161) {
   out_2259405359203808161[0] = 1.0;
   out_2259405359203808161[1] = 0;
   out_2259405359203808161[2] = 0;
   out_2259405359203808161[3] = 0;
   out_2259405359203808161[4] = 0;
   out_2259405359203808161[5] = 0;
   out_2259405359203808161[6] = 0;
   out_2259405359203808161[7] = 0;
   out_2259405359203808161[8] = 0;
   out_2259405359203808161[9] = 0;
   out_2259405359203808161[10] = 0;
   out_2259405359203808161[11] = 0;
   out_2259405359203808161[12] = 0;
   out_2259405359203808161[13] = 0;
   out_2259405359203808161[14] = 0;
   out_2259405359203808161[15] = 0;
   out_2259405359203808161[16] = 0;
   out_2259405359203808161[17] = 0;
   out_2259405359203808161[18] = 0;
   out_2259405359203808161[19] = 0;
   out_2259405359203808161[20] = 0;
   out_2259405359203808161[21] = 0;
   out_2259405359203808161[22] = 1.0;
   out_2259405359203808161[23] = 0;
   out_2259405359203808161[24] = 0;
   out_2259405359203808161[25] = 0;
   out_2259405359203808161[26] = 0;
   out_2259405359203808161[27] = 0;
   out_2259405359203808161[28] = 0;
   out_2259405359203808161[29] = 0;
   out_2259405359203808161[30] = 0;
   out_2259405359203808161[31] = 0;
   out_2259405359203808161[32] = 0;
   out_2259405359203808161[33] = 0;
   out_2259405359203808161[34] = 0;
   out_2259405359203808161[35] = 0;
   out_2259405359203808161[36] = 0;
   out_2259405359203808161[37] = 0;
   out_2259405359203808161[38] = 0;
   out_2259405359203808161[39] = 0;
   out_2259405359203808161[40] = 0;
   out_2259405359203808161[41] = 0;
   out_2259405359203808161[42] = 0;
   out_2259405359203808161[43] = 0;
   out_2259405359203808161[44] = 1.0;
   out_2259405359203808161[45] = 0;
   out_2259405359203808161[46] = 0;
   out_2259405359203808161[47] = 0;
   out_2259405359203808161[48] = 0;
   out_2259405359203808161[49] = 0;
   out_2259405359203808161[50] = 0;
   out_2259405359203808161[51] = 0;
   out_2259405359203808161[52] = 0;
   out_2259405359203808161[53] = 0;
   out_2259405359203808161[54] = 0;
   out_2259405359203808161[55] = 0;
   out_2259405359203808161[56] = 0;
   out_2259405359203808161[57] = 0;
   out_2259405359203808161[58] = 0;
   out_2259405359203808161[59] = 0;
   out_2259405359203808161[60] = 0;
   out_2259405359203808161[61] = 0;
   out_2259405359203808161[62] = 0;
   out_2259405359203808161[63] = 0;
   out_2259405359203808161[64] = 0;
   out_2259405359203808161[65] = 0;
   out_2259405359203808161[66] = -0.5*state[4];
   out_2259405359203808161[67] = -0.5*state[5];
   out_2259405359203808161[68] = -0.5*state[6];
   out_2259405359203808161[69] = 0;
   out_2259405359203808161[70] = 0;
   out_2259405359203808161[71] = 0;
   out_2259405359203808161[72] = 0;
   out_2259405359203808161[73] = 0;
   out_2259405359203808161[74] = 0;
   out_2259405359203808161[75] = 0;
   out_2259405359203808161[76] = 0;
   out_2259405359203808161[77] = 0;
   out_2259405359203808161[78] = 0;
   out_2259405359203808161[79] = 0;
   out_2259405359203808161[80] = 0;
   out_2259405359203808161[81] = 0;
   out_2259405359203808161[82] = 0;
   out_2259405359203808161[83] = 0;
   out_2259405359203808161[84] = 0;
   out_2259405359203808161[85] = 0;
   out_2259405359203808161[86] = 0;
   out_2259405359203808161[87] = 0.5*state[3];
   out_2259405359203808161[88] = 0.5*state[6];
   out_2259405359203808161[89] = -0.5*state[5];
   out_2259405359203808161[90] = 0;
   out_2259405359203808161[91] = 0;
   out_2259405359203808161[92] = 0;
   out_2259405359203808161[93] = 0;
   out_2259405359203808161[94] = 0;
   out_2259405359203808161[95] = 0;
   out_2259405359203808161[96] = 0;
   out_2259405359203808161[97] = 0;
   out_2259405359203808161[98] = 0;
   out_2259405359203808161[99] = 0;
   out_2259405359203808161[100] = 0;
   out_2259405359203808161[101] = 0;
   out_2259405359203808161[102] = 0;
   out_2259405359203808161[103] = 0;
   out_2259405359203808161[104] = 0;
   out_2259405359203808161[105] = 0;
   out_2259405359203808161[106] = 0;
   out_2259405359203808161[107] = 0;
   out_2259405359203808161[108] = -0.5*state[6];
   out_2259405359203808161[109] = 0.5*state[3];
   out_2259405359203808161[110] = 0.5*state[4];
   out_2259405359203808161[111] = 0;
   out_2259405359203808161[112] = 0;
   out_2259405359203808161[113] = 0;
   out_2259405359203808161[114] = 0;
   out_2259405359203808161[115] = 0;
   out_2259405359203808161[116] = 0;
   out_2259405359203808161[117] = 0;
   out_2259405359203808161[118] = 0;
   out_2259405359203808161[119] = 0;
   out_2259405359203808161[120] = 0;
   out_2259405359203808161[121] = 0;
   out_2259405359203808161[122] = 0;
   out_2259405359203808161[123] = 0;
   out_2259405359203808161[124] = 0;
   out_2259405359203808161[125] = 0;
   out_2259405359203808161[126] = 0;
   out_2259405359203808161[127] = 0;
   out_2259405359203808161[128] = 0;
   out_2259405359203808161[129] = 0.5*state[5];
   out_2259405359203808161[130] = -0.5*state[4];
   out_2259405359203808161[131] = 0.5*state[3];
   out_2259405359203808161[132] = 0;
   out_2259405359203808161[133] = 0;
   out_2259405359203808161[134] = 0;
   out_2259405359203808161[135] = 0;
   out_2259405359203808161[136] = 0;
   out_2259405359203808161[137] = 0;
   out_2259405359203808161[138] = 0;
   out_2259405359203808161[139] = 0;
   out_2259405359203808161[140] = 0;
   out_2259405359203808161[141] = 0;
   out_2259405359203808161[142] = 0;
   out_2259405359203808161[143] = 0;
   out_2259405359203808161[144] = 0;
   out_2259405359203808161[145] = 0;
   out_2259405359203808161[146] = 0;
   out_2259405359203808161[147] = 0;
   out_2259405359203808161[148] = 0;
   out_2259405359203808161[149] = 0;
   out_2259405359203808161[150] = 0;
   out_2259405359203808161[151] = 0;
   out_2259405359203808161[152] = 0;
   out_2259405359203808161[153] = 1.0;
   out_2259405359203808161[154] = 0;
   out_2259405359203808161[155] = 0;
   out_2259405359203808161[156] = 0;
   out_2259405359203808161[157] = 0;
   out_2259405359203808161[158] = 0;
   out_2259405359203808161[159] = 0;
   out_2259405359203808161[160] = 0;
   out_2259405359203808161[161] = 0;
   out_2259405359203808161[162] = 0;
   out_2259405359203808161[163] = 0;
   out_2259405359203808161[164] = 0;
   out_2259405359203808161[165] = 0;
   out_2259405359203808161[166] = 0;
   out_2259405359203808161[167] = 0;
   out_2259405359203808161[168] = 0;
   out_2259405359203808161[169] = 0;
   out_2259405359203808161[170] = 0;
   out_2259405359203808161[171] = 0;
   out_2259405359203808161[172] = 0;
   out_2259405359203808161[173] = 0;
   out_2259405359203808161[174] = 0;
   out_2259405359203808161[175] = 1.0;
   out_2259405359203808161[176] = 0;
   out_2259405359203808161[177] = 0;
   out_2259405359203808161[178] = 0;
   out_2259405359203808161[179] = 0;
   out_2259405359203808161[180] = 0;
   out_2259405359203808161[181] = 0;
   out_2259405359203808161[182] = 0;
   out_2259405359203808161[183] = 0;
   out_2259405359203808161[184] = 0;
   out_2259405359203808161[185] = 0;
   out_2259405359203808161[186] = 0;
   out_2259405359203808161[187] = 0;
   out_2259405359203808161[188] = 0;
   out_2259405359203808161[189] = 0;
   out_2259405359203808161[190] = 0;
   out_2259405359203808161[191] = 0;
   out_2259405359203808161[192] = 0;
   out_2259405359203808161[193] = 0;
   out_2259405359203808161[194] = 0;
   out_2259405359203808161[195] = 0;
   out_2259405359203808161[196] = 0;
   out_2259405359203808161[197] = 1.0;
   out_2259405359203808161[198] = 0;
   out_2259405359203808161[199] = 0;
   out_2259405359203808161[200] = 0;
   out_2259405359203808161[201] = 0;
   out_2259405359203808161[202] = 0;
   out_2259405359203808161[203] = 0;
   out_2259405359203808161[204] = 0;
   out_2259405359203808161[205] = 0;
   out_2259405359203808161[206] = 0;
   out_2259405359203808161[207] = 0;
   out_2259405359203808161[208] = 0;
   out_2259405359203808161[209] = 0;
   out_2259405359203808161[210] = 0;
   out_2259405359203808161[211] = 0;
   out_2259405359203808161[212] = 0;
   out_2259405359203808161[213] = 0;
   out_2259405359203808161[214] = 0;
   out_2259405359203808161[215] = 0;
   out_2259405359203808161[216] = 0;
   out_2259405359203808161[217] = 0;
   out_2259405359203808161[218] = 0;
   out_2259405359203808161[219] = 1.0;
   out_2259405359203808161[220] = 0;
   out_2259405359203808161[221] = 0;
   out_2259405359203808161[222] = 0;
   out_2259405359203808161[223] = 0;
   out_2259405359203808161[224] = 0;
   out_2259405359203808161[225] = 0;
   out_2259405359203808161[226] = 0;
   out_2259405359203808161[227] = 0;
   out_2259405359203808161[228] = 0;
   out_2259405359203808161[229] = 0;
   out_2259405359203808161[230] = 0;
   out_2259405359203808161[231] = 0;
   out_2259405359203808161[232] = 0;
   out_2259405359203808161[233] = 0;
   out_2259405359203808161[234] = 0;
   out_2259405359203808161[235] = 0;
   out_2259405359203808161[236] = 0;
   out_2259405359203808161[237] = 0;
   out_2259405359203808161[238] = 0;
   out_2259405359203808161[239] = 0;
   out_2259405359203808161[240] = 0;
   out_2259405359203808161[241] = 1.0;
   out_2259405359203808161[242] = 0;
   out_2259405359203808161[243] = 0;
   out_2259405359203808161[244] = 0;
   out_2259405359203808161[245] = 0;
   out_2259405359203808161[246] = 0;
   out_2259405359203808161[247] = 0;
   out_2259405359203808161[248] = 0;
   out_2259405359203808161[249] = 0;
   out_2259405359203808161[250] = 0;
   out_2259405359203808161[251] = 0;
   out_2259405359203808161[252] = 0;
   out_2259405359203808161[253] = 0;
   out_2259405359203808161[254] = 0;
   out_2259405359203808161[255] = 0;
   out_2259405359203808161[256] = 0;
   out_2259405359203808161[257] = 0;
   out_2259405359203808161[258] = 0;
   out_2259405359203808161[259] = 0;
   out_2259405359203808161[260] = 0;
   out_2259405359203808161[261] = 0;
   out_2259405359203808161[262] = 0;
   out_2259405359203808161[263] = 1.0;
   out_2259405359203808161[264] = 0;
   out_2259405359203808161[265] = 0;
   out_2259405359203808161[266] = 0;
   out_2259405359203808161[267] = 0;
   out_2259405359203808161[268] = 0;
   out_2259405359203808161[269] = 0;
   out_2259405359203808161[270] = 0;
   out_2259405359203808161[271] = 0;
   out_2259405359203808161[272] = 0;
   out_2259405359203808161[273] = 0;
   out_2259405359203808161[274] = 0;
   out_2259405359203808161[275] = 0;
   out_2259405359203808161[276] = 0;
   out_2259405359203808161[277] = 0;
   out_2259405359203808161[278] = 0;
   out_2259405359203808161[279] = 0;
   out_2259405359203808161[280] = 0;
   out_2259405359203808161[281] = 0;
   out_2259405359203808161[282] = 0;
   out_2259405359203808161[283] = 0;
   out_2259405359203808161[284] = 0;
   out_2259405359203808161[285] = 1.0;
   out_2259405359203808161[286] = 0;
   out_2259405359203808161[287] = 0;
   out_2259405359203808161[288] = 0;
   out_2259405359203808161[289] = 0;
   out_2259405359203808161[290] = 0;
   out_2259405359203808161[291] = 0;
   out_2259405359203808161[292] = 0;
   out_2259405359203808161[293] = 0;
   out_2259405359203808161[294] = 0;
   out_2259405359203808161[295] = 0;
   out_2259405359203808161[296] = 0;
   out_2259405359203808161[297] = 0;
   out_2259405359203808161[298] = 0;
   out_2259405359203808161[299] = 0;
   out_2259405359203808161[300] = 0;
   out_2259405359203808161[301] = 0;
   out_2259405359203808161[302] = 0;
   out_2259405359203808161[303] = 0;
   out_2259405359203808161[304] = 0;
   out_2259405359203808161[305] = 0;
   out_2259405359203808161[306] = 0;
   out_2259405359203808161[307] = 1.0;
   out_2259405359203808161[308] = 0;
   out_2259405359203808161[309] = 0;
   out_2259405359203808161[310] = 0;
   out_2259405359203808161[311] = 0;
   out_2259405359203808161[312] = 0;
   out_2259405359203808161[313] = 0;
   out_2259405359203808161[314] = 0;
   out_2259405359203808161[315] = 0;
   out_2259405359203808161[316] = 0;
   out_2259405359203808161[317] = 0;
   out_2259405359203808161[318] = 0;
   out_2259405359203808161[319] = 0;
   out_2259405359203808161[320] = 0;
   out_2259405359203808161[321] = 0;
   out_2259405359203808161[322] = 0;
   out_2259405359203808161[323] = 0;
   out_2259405359203808161[324] = 0;
   out_2259405359203808161[325] = 0;
   out_2259405359203808161[326] = 0;
   out_2259405359203808161[327] = 0;
   out_2259405359203808161[328] = 0;
   out_2259405359203808161[329] = 1.0;
   out_2259405359203808161[330] = 0;
   out_2259405359203808161[331] = 0;
   out_2259405359203808161[332] = 0;
   out_2259405359203808161[333] = 0;
   out_2259405359203808161[334] = 0;
   out_2259405359203808161[335] = 0;
   out_2259405359203808161[336] = 0;
   out_2259405359203808161[337] = 0;
   out_2259405359203808161[338] = 0;
   out_2259405359203808161[339] = 0;
   out_2259405359203808161[340] = 0;
   out_2259405359203808161[341] = 0;
   out_2259405359203808161[342] = 0;
   out_2259405359203808161[343] = 0;
   out_2259405359203808161[344] = 0;
   out_2259405359203808161[345] = 0;
   out_2259405359203808161[346] = 0;
   out_2259405359203808161[347] = 0;
   out_2259405359203808161[348] = 0;
   out_2259405359203808161[349] = 0;
   out_2259405359203808161[350] = 0;
   out_2259405359203808161[351] = 1.0;
   out_2259405359203808161[352] = 0;
   out_2259405359203808161[353] = 0;
   out_2259405359203808161[354] = 0;
   out_2259405359203808161[355] = 0;
   out_2259405359203808161[356] = 0;
   out_2259405359203808161[357] = 0;
   out_2259405359203808161[358] = 0;
   out_2259405359203808161[359] = 0;
   out_2259405359203808161[360] = 0;
   out_2259405359203808161[361] = 0;
   out_2259405359203808161[362] = 0;
   out_2259405359203808161[363] = 0;
   out_2259405359203808161[364] = 0;
   out_2259405359203808161[365] = 0;
   out_2259405359203808161[366] = 0;
   out_2259405359203808161[367] = 0;
   out_2259405359203808161[368] = 0;
   out_2259405359203808161[369] = 0;
   out_2259405359203808161[370] = 0;
   out_2259405359203808161[371] = 0;
   out_2259405359203808161[372] = 0;
   out_2259405359203808161[373] = 1.0;
   out_2259405359203808161[374] = 0;
   out_2259405359203808161[375] = 0;
   out_2259405359203808161[376] = 0;
   out_2259405359203808161[377] = 0;
   out_2259405359203808161[378] = 0;
   out_2259405359203808161[379] = 0;
   out_2259405359203808161[380] = 0;
   out_2259405359203808161[381] = 0;
   out_2259405359203808161[382] = 0;
   out_2259405359203808161[383] = 0;
   out_2259405359203808161[384] = 0;
   out_2259405359203808161[385] = 0;
   out_2259405359203808161[386] = 0;
   out_2259405359203808161[387] = 0;
   out_2259405359203808161[388] = 0;
   out_2259405359203808161[389] = 0;
   out_2259405359203808161[390] = 0;
   out_2259405359203808161[391] = 0;
   out_2259405359203808161[392] = 0;
   out_2259405359203808161[393] = 0;
   out_2259405359203808161[394] = 0;
   out_2259405359203808161[395] = 1.0;
   out_2259405359203808161[396] = 0;
   out_2259405359203808161[397] = 0;
   out_2259405359203808161[398] = 0;
   out_2259405359203808161[399] = 0;
   out_2259405359203808161[400] = 0;
   out_2259405359203808161[401] = 0;
   out_2259405359203808161[402] = 0;
   out_2259405359203808161[403] = 0;
   out_2259405359203808161[404] = 0;
   out_2259405359203808161[405] = 0;
   out_2259405359203808161[406] = 0;
   out_2259405359203808161[407] = 0;
   out_2259405359203808161[408] = 0;
   out_2259405359203808161[409] = 0;
   out_2259405359203808161[410] = 0;
   out_2259405359203808161[411] = 0;
   out_2259405359203808161[412] = 0;
   out_2259405359203808161[413] = 0;
   out_2259405359203808161[414] = 0;
   out_2259405359203808161[415] = 0;
   out_2259405359203808161[416] = 0;
   out_2259405359203808161[417] = 1.0;
   out_2259405359203808161[418] = 0;
   out_2259405359203808161[419] = 0;
   out_2259405359203808161[420] = 0;
   out_2259405359203808161[421] = 0;
   out_2259405359203808161[422] = 0;
   out_2259405359203808161[423] = 0;
   out_2259405359203808161[424] = 0;
   out_2259405359203808161[425] = 0;
   out_2259405359203808161[426] = 0;
   out_2259405359203808161[427] = 0;
   out_2259405359203808161[428] = 0;
   out_2259405359203808161[429] = 0;
   out_2259405359203808161[430] = 0;
   out_2259405359203808161[431] = 0;
   out_2259405359203808161[432] = 0;
   out_2259405359203808161[433] = 0;
   out_2259405359203808161[434] = 0;
   out_2259405359203808161[435] = 0;
   out_2259405359203808161[436] = 0;
   out_2259405359203808161[437] = 0;
   out_2259405359203808161[438] = 0;
   out_2259405359203808161[439] = 1.0;
   out_2259405359203808161[440] = 0;
   out_2259405359203808161[441] = 0;
   out_2259405359203808161[442] = 0;
   out_2259405359203808161[443] = 0;
   out_2259405359203808161[444] = 0;
   out_2259405359203808161[445] = 0;
   out_2259405359203808161[446] = 0;
   out_2259405359203808161[447] = 0;
   out_2259405359203808161[448] = 0;
   out_2259405359203808161[449] = 0;
   out_2259405359203808161[450] = 0;
   out_2259405359203808161[451] = 0;
   out_2259405359203808161[452] = 0;
   out_2259405359203808161[453] = 0;
   out_2259405359203808161[454] = 0;
   out_2259405359203808161[455] = 0;
   out_2259405359203808161[456] = 0;
   out_2259405359203808161[457] = 0;
   out_2259405359203808161[458] = 0;
   out_2259405359203808161[459] = 0;
   out_2259405359203808161[460] = 0;
   out_2259405359203808161[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_7355999048988548228) {
   out_7355999048988548228[0] = dt*state[7] + state[0];
   out_7355999048988548228[1] = dt*state[8] + state[1];
   out_7355999048988548228[2] = dt*state[9] + state[2];
   out_7355999048988548228[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_7355999048988548228[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_7355999048988548228[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_7355999048988548228[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_7355999048988548228[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_7355999048988548228[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_7355999048988548228[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_7355999048988548228[10] = state[10];
   out_7355999048988548228[11] = state[11];
   out_7355999048988548228[12] = state[12];
   out_7355999048988548228[13] = state[13];
   out_7355999048988548228[14] = state[14];
   out_7355999048988548228[15] = state[15];
   out_7355999048988548228[16] = state[16];
   out_7355999048988548228[17] = state[17];
   out_7355999048988548228[18] = state[18];
   out_7355999048988548228[19] = state[19];
   out_7355999048988548228[20] = state[20];
   out_7355999048988548228[21] = state[21];
}
void F_fun(double *state, double dt, double *out_2793064135720303537) {
   out_2793064135720303537[0] = 1;
   out_2793064135720303537[1] = 0;
   out_2793064135720303537[2] = 0;
   out_2793064135720303537[3] = 0;
   out_2793064135720303537[4] = 0;
   out_2793064135720303537[5] = 0;
   out_2793064135720303537[6] = dt;
   out_2793064135720303537[7] = 0;
   out_2793064135720303537[8] = 0;
   out_2793064135720303537[9] = 0;
   out_2793064135720303537[10] = 0;
   out_2793064135720303537[11] = 0;
   out_2793064135720303537[12] = 0;
   out_2793064135720303537[13] = 0;
   out_2793064135720303537[14] = 0;
   out_2793064135720303537[15] = 0;
   out_2793064135720303537[16] = 0;
   out_2793064135720303537[17] = 0;
   out_2793064135720303537[18] = 0;
   out_2793064135720303537[19] = 0;
   out_2793064135720303537[20] = 0;
   out_2793064135720303537[21] = 0;
   out_2793064135720303537[22] = 1;
   out_2793064135720303537[23] = 0;
   out_2793064135720303537[24] = 0;
   out_2793064135720303537[25] = 0;
   out_2793064135720303537[26] = 0;
   out_2793064135720303537[27] = 0;
   out_2793064135720303537[28] = dt;
   out_2793064135720303537[29] = 0;
   out_2793064135720303537[30] = 0;
   out_2793064135720303537[31] = 0;
   out_2793064135720303537[32] = 0;
   out_2793064135720303537[33] = 0;
   out_2793064135720303537[34] = 0;
   out_2793064135720303537[35] = 0;
   out_2793064135720303537[36] = 0;
   out_2793064135720303537[37] = 0;
   out_2793064135720303537[38] = 0;
   out_2793064135720303537[39] = 0;
   out_2793064135720303537[40] = 0;
   out_2793064135720303537[41] = 0;
   out_2793064135720303537[42] = 0;
   out_2793064135720303537[43] = 0;
   out_2793064135720303537[44] = 1;
   out_2793064135720303537[45] = 0;
   out_2793064135720303537[46] = 0;
   out_2793064135720303537[47] = 0;
   out_2793064135720303537[48] = 0;
   out_2793064135720303537[49] = 0;
   out_2793064135720303537[50] = dt;
   out_2793064135720303537[51] = 0;
   out_2793064135720303537[52] = 0;
   out_2793064135720303537[53] = 0;
   out_2793064135720303537[54] = 0;
   out_2793064135720303537[55] = 0;
   out_2793064135720303537[56] = 0;
   out_2793064135720303537[57] = 0;
   out_2793064135720303537[58] = 0;
   out_2793064135720303537[59] = 0;
   out_2793064135720303537[60] = 0;
   out_2793064135720303537[61] = 0;
   out_2793064135720303537[62] = 0;
   out_2793064135720303537[63] = 0;
   out_2793064135720303537[64] = 0;
   out_2793064135720303537[65] = 0;
   out_2793064135720303537[66] = 1;
   out_2793064135720303537[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_2793064135720303537[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_2793064135720303537[69] = 0;
   out_2793064135720303537[70] = 0;
   out_2793064135720303537[71] = 0;
   out_2793064135720303537[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2793064135720303537[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2793064135720303537[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2793064135720303537[75] = 0;
   out_2793064135720303537[76] = 0;
   out_2793064135720303537[77] = 0;
   out_2793064135720303537[78] = 0;
   out_2793064135720303537[79] = 0;
   out_2793064135720303537[80] = 0;
   out_2793064135720303537[81] = 0;
   out_2793064135720303537[82] = 0;
   out_2793064135720303537[83] = 0;
   out_2793064135720303537[84] = 0;
   out_2793064135720303537[85] = 0;
   out_2793064135720303537[86] = 0;
   out_2793064135720303537[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_2793064135720303537[88] = 1;
   out_2793064135720303537[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_2793064135720303537[90] = 0;
   out_2793064135720303537[91] = 0;
   out_2793064135720303537[92] = 0;
   out_2793064135720303537[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2793064135720303537[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2793064135720303537[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2793064135720303537[96] = 0;
   out_2793064135720303537[97] = 0;
   out_2793064135720303537[98] = 0;
   out_2793064135720303537[99] = 0;
   out_2793064135720303537[100] = 0;
   out_2793064135720303537[101] = 0;
   out_2793064135720303537[102] = 0;
   out_2793064135720303537[103] = 0;
   out_2793064135720303537[104] = 0;
   out_2793064135720303537[105] = 0;
   out_2793064135720303537[106] = 0;
   out_2793064135720303537[107] = 0;
   out_2793064135720303537[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_2793064135720303537[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_2793064135720303537[110] = 1;
   out_2793064135720303537[111] = 0;
   out_2793064135720303537[112] = 0;
   out_2793064135720303537[113] = 0;
   out_2793064135720303537[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2793064135720303537[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2793064135720303537[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2793064135720303537[117] = 0;
   out_2793064135720303537[118] = 0;
   out_2793064135720303537[119] = 0;
   out_2793064135720303537[120] = 0;
   out_2793064135720303537[121] = 0;
   out_2793064135720303537[122] = 0;
   out_2793064135720303537[123] = 0;
   out_2793064135720303537[124] = 0;
   out_2793064135720303537[125] = 0;
   out_2793064135720303537[126] = 0;
   out_2793064135720303537[127] = 0;
   out_2793064135720303537[128] = 0;
   out_2793064135720303537[129] = 0;
   out_2793064135720303537[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_2793064135720303537[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_2793064135720303537[132] = 1;
   out_2793064135720303537[133] = 0;
   out_2793064135720303537[134] = 0;
   out_2793064135720303537[135] = 0;
   out_2793064135720303537[136] = 0;
   out_2793064135720303537[137] = 0;
   out_2793064135720303537[138] = 0;
   out_2793064135720303537[139] = 0;
   out_2793064135720303537[140] = 0;
   out_2793064135720303537[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2793064135720303537[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2793064135720303537[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2793064135720303537[144] = 0;
   out_2793064135720303537[145] = 0;
   out_2793064135720303537[146] = 0;
   out_2793064135720303537[147] = 0;
   out_2793064135720303537[148] = 0;
   out_2793064135720303537[149] = 0;
   out_2793064135720303537[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_2793064135720303537[151] = 0;
   out_2793064135720303537[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_2793064135720303537[153] = 0;
   out_2793064135720303537[154] = 1;
   out_2793064135720303537[155] = 0;
   out_2793064135720303537[156] = 0;
   out_2793064135720303537[157] = 0;
   out_2793064135720303537[158] = 0;
   out_2793064135720303537[159] = 0;
   out_2793064135720303537[160] = 0;
   out_2793064135720303537[161] = 0;
   out_2793064135720303537[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2793064135720303537[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2793064135720303537[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2793064135720303537[165] = 0;
   out_2793064135720303537[166] = 0;
   out_2793064135720303537[167] = 0;
   out_2793064135720303537[168] = 0;
   out_2793064135720303537[169] = 0;
   out_2793064135720303537[170] = 0;
   out_2793064135720303537[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_2793064135720303537[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_2793064135720303537[173] = 0;
   out_2793064135720303537[174] = 0;
   out_2793064135720303537[175] = 0;
   out_2793064135720303537[176] = 1;
   out_2793064135720303537[177] = 0;
   out_2793064135720303537[178] = 0;
   out_2793064135720303537[179] = 0;
   out_2793064135720303537[180] = 0;
   out_2793064135720303537[181] = 0;
   out_2793064135720303537[182] = 0;
   out_2793064135720303537[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2793064135720303537[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2793064135720303537[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2793064135720303537[186] = 0;
   out_2793064135720303537[187] = 0;
   out_2793064135720303537[188] = 0;
   out_2793064135720303537[189] = 0;
   out_2793064135720303537[190] = 0;
   out_2793064135720303537[191] = 0;
   out_2793064135720303537[192] = 0;
   out_2793064135720303537[193] = 0;
   out_2793064135720303537[194] = 0;
   out_2793064135720303537[195] = 0;
   out_2793064135720303537[196] = 0;
   out_2793064135720303537[197] = 0;
   out_2793064135720303537[198] = 1;
   out_2793064135720303537[199] = 0;
   out_2793064135720303537[200] = 0;
   out_2793064135720303537[201] = 0;
   out_2793064135720303537[202] = 0;
   out_2793064135720303537[203] = 0;
   out_2793064135720303537[204] = 0;
   out_2793064135720303537[205] = 0;
   out_2793064135720303537[206] = 0;
   out_2793064135720303537[207] = 0;
   out_2793064135720303537[208] = 0;
   out_2793064135720303537[209] = 0;
   out_2793064135720303537[210] = 0;
   out_2793064135720303537[211] = 0;
   out_2793064135720303537[212] = 0;
   out_2793064135720303537[213] = 0;
   out_2793064135720303537[214] = 0;
   out_2793064135720303537[215] = 0;
   out_2793064135720303537[216] = 0;
   out_2793064135720303537[217] = 0;
   out_2793064135720303537[218] = 0;
   out_2793064135720303537[219] = 0;
   out_2793064135720303537[220] = 1;
   out_2793064135720303537[221] = 0;
   out_2793064135720303537[222] = 0;
   out_2793064135720303537[223] = 0;
   out_2793064135720303537[224] = 0;
   out_2793064135720303537[225] = 0;
   out_2793064135720303537[226] = 0;
   out_2793064135720303537[227] = 0;
   out_2793064135720303537[228] = 0;
   out_2793064135720303537[229] = 0;
   out_2793064135720303537[230] = 0;
   out_2793064135720303537[231] = 0;
   out_2793064135720303537[232] = 0;
   out_2793064135720303537[233] = 0;
   out_2793064135720303537[234] = 0;
   out_2793064135720303537[235] = 0;
   out_2793064135720303537[236] = 0;
   out_2793064135720303537[237] = 0;
   out_2793064135720303537[238] = 0;
   out_2793064135720303537[239] = 0;
   out_2793064135720303537[240] = 0;
   out_2793064135720303537[241] = 0;
   out_2793064135720303537[242] = 1;
   out_2793064135720303537[243] = 0;
   out_2793064135720303537[244] = 0;
   out_2793064135720303537[245] = 0;
   out_2793064135720303537[246] = 0;
   out_2793064135720303537[247] = 0;
   out_2793064135720303537[248] = 0;
   out_2793064135720303537[249] = 0;
   out_2793064135720303537[250] = 0;
   out_2793064135720303537[251] = 0;
   out_2793064135720303537[252] = 0;
   out_2793064135720303537[253] = 0;
   out_2793064135720303537[254] = 0;
   out_2793064135720303537[255] = 0;
   out_2793064135720303537[256] = 0;
   out_2793064135720303537[257] = 0;
   out_2793064135720303537[258] = 0;
   out_2793064135720303537[259] = 0;
   out_2793064135720303537[260] = 0;
   out_2793064135720303537[261] = 0;
   out_2793064135720303537[262] = 0;
   out_2793064135720303537[263] = 0;
   out_2793064135720303537[264] = 1;
   out_2793064135720303537[265] = 0;
   out_2793064135720303537[266] = 0;
   out_2793064135720303537[267] = 0;
   out_2793064135720303537[268] = 0;
   out_2793064135720303537[269] = 0;
   out_2793064135720303537[270] = 0;
   out_2793064135720303537[271] = 0;
   out_2793064135720303537[272] = 0;
   out_2793064135720303537[273] = 0;
   out_2793064135720303537[274] = 0;
   out_2793064135720303537[275] = 0;
   out_2793064135720303537[276] = 0;
   out_2793064135720303537[277] = 0;
   out_2793064135720303537[278] = 0;
   out_2793064135720303537[279] = 0;
   out_2793064135720303537[280] = 0;
   out_2793064135720303537[281] = 0;
   out_2793064135720303537[282] = 0;
   out_2793064135720303537[283] = 0;
   out_2793064135720303537[284] = 0;
   out_2793064135720303537[285] = 0;
   out_2793064135720303537[286] = 1;
   out_2793064135720303537[287] = 0;
   out_2793064135720303537[288] = 0;
   out_2793064135720303537[289] = 0;
   out_2793064135720303537[290] = 0;
   out_2793064135720303537[291] = 0;
   out_2793064135720303537[292] = 0;
   out_2793064135720303537[293] = 0;
   out_2793064135720303537[294] = 0;
   out_2793064135720303537[295] = 0;
   out_2793064135720303537[296] = 0;
   out_2793064135720303537[297] = 0;
   out_2793064135720303537[298] = 0;
   out_2793064135720303537[299] = 0;
   out_2793064135720303537[300] = 0;
   out_2793064135720303537[301] = 0;
   out_2793064135720303537[302] = 0;
   out_2793064135720303537[303] = 0;
   out_2793064135720303537[304] = 0;
   out_2793064135720303537[305] = 0;
   out_2793064135720303537[306] = 0;
   out_2793064135720303537[307] = 0;
   out_2793064135720303537[308] = 1;
   out_2793064135720303537[309] = 0;
   out_2793064135720303537[310] = 0;
   out_2793064135720303537[311] = 0;
   out_2793064135720303537[312] = 0;
   out_2793064135720303537[313] = 0;
   out_2793064135720303537[314] = 0;
   out_2793064135720303537[315] = 0;
   out_2793064135720303537[316] = 0;
   out_2793064135720303537[317] = 0;
   out_2793064135720303537[318] = 0;
   out_2793064135720303537[319] = 0;
   out_2793064135720303537[320] = 0;
   out_2793064135720303537[321] = 0;
   out_2793064135720303537[322] = 0;
   out_2793064135720303537[323] = 0;
   out_2793064135720303537[324] = 0;
   out_2793064135720303537[325] = 0;
   out_2793064135720303537[326] = 0;
   out_2793064135720303537[327] = 0;
   out_2793064135720303537[328] = 0;
   out_2793064135720303537[329] = 0;
   out_2793064135720303537[330] = 1;
   out_2793064135720303537[331] = 0;
   out_2793064135720303537[332] = 0;
   out_2793064135720303537[333] = 0;
   out_2793064135720303537[334] = 0;
   out_2793064135720303537[335] = 0;
   out_2793064135720303537[336] = 0;
   out_2793064135720303537[337] = 0;
   out_2793064135720303537[338] = 0;
   out_2793064135720303537[339] = 0;
   out_2793064135720303537[340] = 0;
   out_2793064135720303537[341] = 0;
   out_2793064135720303537[342] = 0;
   out_2793064135720303537[343] = 0;
   out_2793064135720303537[344] = 0;
   out_2793064135720303537[345] = 0;
   out_2793064135720303537[346] = 0;
   out_2793064135720303537[347] = 0;
   out_2793064135720303537[348] = 0;
   out_2793064135720303537[349] = 0;
   out_2793064135720303537[350] = 0;
   out_2793064135720303537[351] = 0;
   out_2793064135720303537[352] = 1;
   out_2793064135720303537[353] = 0;
   out_2793064135720303537[354] = 0;
   out_2793064135720303537[355] = 0;
   out_2793064135720303537[356] = 0;
   out_2793064135720303537[357] = 0;
   out_2793064135720303537[358] = 0;
   out_2793064135720303537[359] = 0;
   out_2793064135720303537[360] = 0;
   out_2793064135720303537[361] = 0;
   out_2793064135720303537[362] = 0;
   out_2793064135720303537[363] = 0;
   out_2793064135720303537[364] = 0;
   out_2793064135720303537[365] = 0;
   out_2793064135720303537[366] = 0;
   out_2793064135720303537[367] = 0;
   out_2793064135720303537[368] = 0;
   out_2793064135720303537[369] = 0;
   out_2793064135720303537[370] = 0;
   out_2793064135720303537[371] = 0;
   out_2793064135720303537[372] = 0;
   out_2793064135720303537[373] = 0;
   out_2793064135720303537[374] = 1;
   out_2793064135720303537[375] = 0;
   out_2793064135720303537[376] = 0;
   out_2793064135720303537[377] = 0;
   out_2793064135720303537[378] = 0;
   out_2793064135720303537[379] = 0;
   out_2793064135720303537[380] = 0;
   out_2793064135720303537[381] = 0;
   out_2793064135720303537[382] = 0;
   out_2793064135720303537[383] = 0;
   out_2793064135720303537[384] = 0;
   out_2793064135720303537[385] = 0;
   out_2793064135720303537[386] = 0;
   out_2793064135720303537[387] = 0;
   out_2793064135720303537[388] = 0;
   out_2793064135720303537[389] = 0;
   out_2793064135720303537[390] = 0;
   out_2793064135720303537[391] = 0;
   out_2793064135720303537[392] = 0;
   out_2793064135720303537[393] = 0;
   out_2793064135720303537[394] = 0;
   out_2793064135720303537[395] = 0;
   out_2793064135720303537[396] = 1;
   out_2793064135720303537[397] = 0;
   out_2793064135720303537[398] = 0;
   out_2793064135720303537[399] = 0;
   out_2793064135720303537[400] = 0;
   out_2793064135720303537[401] = 0;
   out_2793064135720303537[402] = 0;
   out_2793064135720303537[403] = 0;
   out_2793064135720303537[404] = 0;
   out_2793064135720303537[405] = 0;
   out_2793064135720303537[406] = 0;
   out_2793064135720303537[407] = 0;
   out_2793064135720303537[408] = 0;
   out_2793064135720303537[409] = 0;
   out_2793064135720303537[410] = 0;
   out_2793064135720303537[411] = 0;
   out_2793064135720303537[412] = 0;
   out_2793064135720303537[413] = 0;
   out_2793064135720303537[414] = 0;
   out_2793064135720303537[415] = 0;
   out_2793064135720303537[416] = 0;
   out_2793064135720303537[417] = 0;
   out_2793064135720303537[418] = 1;
   out_2793064135720303537[419] = 0;
   out_2793064135720303537[420] = 0;
   out_2793064135720303537[421] = 0;
   out_2793064135720303537[422] = 0;
   out_2793064135720303537[423] = 0;
   out_2793064135720303537[424] = 0;
   out_2793064135720303537[425] = 0;
   out_2793064135720303537[426] = 0;
   out_2793064135720303537[427] = 0;
   out_2793064135720303537[428] = 0;
   out_2793064135720303537[429] = 0;
   out_2793064135720303537[430] = 0;
   out_2793064135720303537[431] = 0;
   out_2793064135720303537[432] = 0;
   out_2793064135720303537[433] = 0;
   out_2793064135720303537[434] = 0;
   out_2793064135720303537[435] = 0;
   out_2793064135720303537[436] = 0;
   out_2793064135720303537[437] = 0;
   out_2793064135720303537[438] = 0;
   out_2793064135720303537[439] = 0;
   out_2793064135720303537[440] = 1;
}
void h_4(double *state, double *unused, double *out_8591242944923457004) {
   out_8591242944923457004[0] = state[10] + state[13];
   out_8591242944923457004[1] = state[11] + state[14];
   out_8591242944923457004[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_3172652086954443828) {
   out_3172652086954443828[0] = 0;
   out_3172652086954443828[1] = 0;
   out_3172652086954443828[2] = 0;
   out_3172652086954443828[3] = 0;
   out_3172652086954443828[4] = 0;
   out_3172652086954443828[5] = 0;
   out_3172652086954443828[6] = 0;
   out_3172652086954443828[7] = 0;
   out_3172652086954443828[8] = 0;
   out_3172652086954443828[9] = 0;
   out_3172652086954443828[10] = 1;
   out_3172652086954443828[11] = 0;
   out_3172652086954443828[12] = 0;
   out_3172652086954443828[13] = 1;
   out_3172652086954443828[14] = 0;
   out_3172652086954443828[15] = 0;
   out_3172652086954443828[16] = 0;
   out_3172652086954443828[17] = 0;
   out_3172652086954443828[18] = 0;
   out_3172652086954443828[19] = 0;
   out_3172652086954443828[20] = 0;
   out_3172652086954443828[21] = 0;
   out_3172652086954443828[22] = 0;
   out_3172652086954443828[23] = 0;
   out_3172652086954443828[24] = 0;
   out_3172652086954443828[25] = 0;
   out_3172652086954443828[26] = 0;
   out_3172652086954443828[27] = 0;
   out_3172652086954443828[28] = 0;
   out_3172652086954443828[29] = 0;
   out_3172652086954443828[30] = 0;
   out_3172652086954443828[31] = 0;
   out_3172652086954443828[32] = 0;
   out_3172652086954443828[33] = 1;
   out_3172652086954443828[34] = 0;
   out_3172652086954443828[35] = 0;
   out_3172652086954443828[36] = 1;
   out_3172652086954443828[37] = 0;
   out_3172652086954443828[38] = 0;
   out_3172652086954443828[39] = 0;
   out_3172652086954443828[40] = 0;
   out_3172652086954443828[41] = 0;
   out_3172652086954443828[42] = 0;
   out_3172652086954443828[43] = 0;
   out_3172652086954443828[44] = 0;
   out_3172652086954443828[45] = 0;
   out_3172652086954443828[46] = 0;
   out_3172652086954443828[47] = 0;
   out_3172652086954443828[48] = 0;
   out_3172652086954443828[49] = 0;
   out_3172652086954443828[50] = 0;
   out_3172652086954443828[51] = 0;
   out_3172652086954443828[52] = 0;
   out_3172652086954443828[53] = 0;
   out_3172652086954443828[54] = 0;
   out_3172652086954443828[55] = 0;
   out_3172652086954443828[56] = 1;
   out_3172652086954443828[57] = 0;
   out_3172652086954443828[58] = 0;
   out_3172652086954443828[59] = 1;
   out_3172652086954443828[60] = 0;
   out_3172652086954443828[61] = 0;
   out_3172652086954443828[62] = 0;
   out_3172652086954443828[63] = 0;
   out_3172652086954443828[64] = 0;
   out_3172652086954443828[65] = 0;
}
void h_9(double *state, double *unused, double *out_1108062706504611441) {
   out_1108062706504611441[0] = state[10];
   out_1108062706504611441[1] = state[11];
   out_1108062706504611441[2] = state[12];
}
void H_9(double *state, double *unused, double *out_283790534674364486) {
   out_283790534674364486[0] = 0;
   out_283790534674364486[1] = 0;
   out_283790534674364486[2] = 0;
   out_283790534674364486[3] = 0;
   out_283790534674364486[4] = 0;
   out_283790534674364486[5] = 0;
   out_283790534674364486[6] = 0;
   out_283790534674364486[7] = 0;
   out_283790534674364486[8] = 0;
   out_283790534674364486[9] = 0;
   out_283790534674364486[10] = 1;
   out_283790534674364486[11] = 0;
   out_283790534674364486[12] = 0;
   out_283790534674364486[13] = 0;
   out_283790534674364486[14] = 0;
   out_283790534674364486[15] = 0;
   out_283790534674364486[16] = 0;
   out_283790534674364486[17] = 0;
   out_283790534674364486[18] = 0;
   out_283790534674364486[19] = 0;
   out_283790534674364486[20] = 0;
   out_283790534674364486[21] = 0;
   out_283790534674364486[22] = 0;
   out_283790534674364486[23] = 0;
   out_283790534674364486[24] = 0;
   out_283790534674364486[25] = 0;
   out_283790534674364486[26] = 0;
   out_283790534674364486[27] = 0;
   out_283790534674364486[28] = 0;
   out_283790534674364486[29] = 0;
   out_283790534674364486[30] = 0;
   out_283790534674364486[31] = 0;
   out_283790534674364486[32] = 0;
   out_283790534674364486[33] = 1;
   out_283790534674364486[34] = 0;
   out_283790534674364486[35] = 0;
   out_283790534674364486[36] = 0;
   out_283790534674364486[37] = 0;
   out_283790534674364486[38] = 0;
   out_283790534674364486[39] = 0;
   out_283790534674364486[40] = 0;
   out_283790534674364486[41] = 0;
   out_283790534674364486[42] = 0;
   out_283790534674364486[43] = 0;
   out_283790534674364486[44] = 0;
   out_283790534674364486[45] = 0;
   out_283790534674364486[46] = 0;
   out_283790534674364486[47] = 0;
   out_283790534674364486[48] = 0;
   out_283790534674364486[49] = 0;
   out_283790534674364486[50] = 0;
   out_283790534674364486[51] = 0;
   out_283790534674364486[52] = 0;
   out_283790534674364486[53] = 0;
   out_283790534674364486[54] = 0;
   out_283790534674364486[55] = 0;
   out_283790534674364486[56] = 1;
   out_283790534674364486[57] = 0;
   out_283790534674364486[58] = 0;
   out_283790534674364486[59] = 0;
   out_283790534674364486[60] = 0;
   out_283790534674364486[61] = 0;
   out_283790534674364486[62] = 0;
   out_283790534674364486[63] = 0;
   out_283790534674364486[64] = 0;
   out_283790534674364486[65] = 0;
}
void h_10(double *state, double *unused, double *out_842376979376852950) {
   out_842376979376852950[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_842376979376852950[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_842376979376852950[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_8552939557185869698) {
   out_8552939557185869698[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8552939557185869698[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_8552939557185869698[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_8552939557185869698[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8552939557185869698[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8552939557185869698[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8552939557185869698[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8552939557185869698[7] = 0;
   out_8552939557185869698[8] = 0;
   out_8552939557185869698[9] = 0;
   out_8552939557185869698[10] = 0;
   out_8552939557185869698[11] = 0;
   out_8552939557185869698[12] = 0;
   out_8552939557185869698[13] = 0;
   out_8552939557185869698[14] = 0;
   out_8552939557185869698[15] = 0;
   out_8552939557185869698[16] = 1;
   out_8552939557185869698[17] = 0;
   out_8552939557185869698[18] = 0;
   out_8552939557185869698[19] = 1;
   out_8552939557185869698[20] = 0;
   out_8552939557185869698[21] = 0;
   out_8552939557185869698[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_8552939557185869698[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8552939557185869698[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_8552939557185869698[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8552939557185869698[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8552939557185869698[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8552939557185869698[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8552939557185869698[29] = 0;
   out_8552939557185869698[30] = 0;
   out_8552939557185869698[31] = 0;
   out_8552939557185869698[32] = 0;
   out_8552939557185869698[33] = 0;
   out_8552939557185869698[34] = 0;
   out_8552939557185869698[35] = 0;
   out_8552939557185869698[36] = 0;
   out_8552939557185869698[37] = 0;
   out_8552939557185869698[38] = 0;
   out_8552939557185869698[39] = 1;
   out_8552939557185869698[40] = 0;
   out_8552939557185869698[41] = 0;
   out_8552939557185869698[42] = 1;
   out_8552939557185869698[43] = 0;
   out_8552939557185869698[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_8552939557185869698[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_8552939557185869698[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8552939557185869698[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8552939557185869698[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8552939557185869698[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8552939557185869698[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8552939557185869698[51] = 0;
   out_8552939557185869698[52] = 0;
   out_8552939557185869698[53] = 0;
   out_8552939557185869698[54] = 0;
   out_8552939557185869698[55] = 0;
   out_8552939557185869698[56] = 0;
   out_8552939557185869698[57] = 0;
   out_8552939557185869698[58] = 0;
   out_8552939557185869698[59] = 0;
   out_8552939557185869698[60] = 0;
   out_8552939557185869698[61] = 0;
   out_8552939557185869698[62] = 1;
   out_8552939557185869698[63] = 0;
   out_8552939557185869698[64] = 0;
   out_8552939557185869698[65] = 1;
}
void h_12(double *state, double *unused, double *out_7209938386305200071) {
   out_7209938386305200071[0] = state[0];
   out_7209938386305200071[1] = state[1];
   out_7209938386305200071[2] = state[2];
}
void H_12(double *state, double *unused, double *out_2551553061906850161) {
   out_2551553061906850161[0] = 1;
   out_2551553061906850161[1] = 0;
   out_2551553061906850161[2] = 0;
   out_2551553061906850161[3] = 0;
   out_2551553061906850161[4] = 0;
   out_2551553061906850161[5] = 0;
   out_2551553061906850161[6] = 0;
   out_2551553061906850161[7] = 0;
   out_2551553061906850161[8] = 0;
   out_2551553061906850161[9] = 0;
   out_2551553061906850161[10] = 0;
   out_2551553061906850161[11] = 0;
   out_2551553061906850161[12] = 0;
   out_2551553061906850161[13] = 0;
   out_2551553061906850161[14] = 0;
   out_2551553061906850161[15] = 0;
   out_2551553061906850161[16] = 0;
   out_2551553061906850161[17] = 0;
   out_2551553061906850161[18] = 0;
   out_2551553061906850161[19] = 0;
   out_2551553061906850161[20] = 0;
   out_2551553061906850161[21] = 0;
   out_2551553061906850161[22] = 0;
   out_2551553061906850161[23] = 1;
   out_2551553061906850161[24] = 0;
   out_2551553061906850161[25] = 0;
   out_2551553061906850161[26] = 0;
   out_2551553061906850161[27] = 0;
   out_2551553061906850161[28] = 0;
   out_2551553061906850161[29] = 0;
   out_2551553061906850161[30] = 0;
   out_2551553061906850161[31] = 0;
   out_2551553061906850161[32] = 0;
   out_2551553061906850161[33] = 0;
   out_2551553061906850161[34] = 0;
   out_2551553061906850161[35] = 0;
   out_2551553061906850161[36] = 0;
   out_2551553061906850161[37] = 0;
   out_2551553061906850161[38] = 0;
   out_2551553061906850161[39] = 0;
   out_2551553061906850161[40] = 0;
   out_2551553061906850161[41] = 0;
   out_2551553061906850161[42] = 0;
   out_2551553061906850161[43] = 0;
   out_2551553061906850161[44] = 0;
   out_2551553061906850161[45] = 0;
   out_2551553061906850161[46] = 1;
   out_2551553061906850161[47] = 0;
   out_2551553061906850161[48] = 0;
   out_2551553061906850161[49] = 0;
   out_2551553061906850161[50] = 0;
   out_2551553061906850161[51] = 0;
   out_2551553061906850161[52] = 0;
   out_2551553061906850161[53] = 0;
   out_2551553061906850161[54] = 0;
   out_2551553061906850161[55] = 0;
   out_2551553061906850161[56] = 0;
   out_2551553061906850161[57] = 0;
   out_2551553061906850161[58] = 0;
   out_2551553061906850161[59] = 0;
   out_2551553061906850161[60] = 0;
   out_2551553061906850161[61] = 0;
   out_2551553061906850161[62] = 0;
   out_2551553061906850161[63] = 0;
   out_2551553061906850161[64] = 0;
   out_2551553061906850161[65] = 0;
}
void h_35(double *state, double *unused, double *out_1172154858295733565) {
   out_1172154858295733565[0] = state[7];
   out_1172154858295733565[1] = state[8];
   out_1172154858295733565[2] = state[9];
}
void H_35(double *state, double *unused, double *out_194009970418163548) {
   out_194009970418163548[0] = 0;
   out_194009970418163548[1] = 0;
   out_194009970418163548[2] = 0;
   out_194009970418163548[3] = 0;
   out_194009970418163548[4] = 0;
   out_194009970418163548[5] = 0;
   out_194009970418163548[6] = 0;
   out_194009970418163548[7] = 1;
   out_194009970418163548[8] = 0;
   out_194009970418163548[9] = 0;
   out_194009970418163548[10] = 0;
   out_194009970418163548[11] = 0;
   out_194009970418163548[12] = 0;
   out_194009970418163548[13] = 0;
   out_194009970418163548[14] = 0;
   out_194009970418163548[15] = 0;
   out_194009970418163548[16] = 0;
   out_194009970418163548[17] = 0;
   out_194009970418163548[18] = 0;
   out_194009970418163548[19] = 0;
   out_194009970418163548[20] = 0;
   out_194009970418163548[21] = 0;
   out_194009970418163548[22] = 0;
   out_194009970418163548[23] = 0;
   out_194009970418163548[24] = 0;
   out_194009970418163548[25] = 0;
   out_194009970418163548[26] = 0;
   out_194009970418163548[27] = 0;
   out_194009970418163548[28] = 0;
   out_194009970418163548[29] = 0;
   out_194009970418163548[30] = 1;
   out_194009970418163548[31] = 0;
   out_194009970418163548[32] = 0;
   out_194009970418163548[33] = 0;
   out_194009970418163548[34] = 0;
   out_194009970418163548[35] = 0;
   out_194009970418163548[36] = 0;
   out_194009970418163548[37] = 0;
   out_194009970418163548[38] = 0;
   out_194009970418163548[39] = 0;
   out_194009970418163548[40] = 0;
   out_194009970418163548[41] = 0;
   out_194009970418163548[42] = 0;
   out_194009970418163548[43] = 0;
   out_194009970418163548[44] = 0;
   out_194009970418163548[45] = 0;
   out_194009970418163548[46] = 0;
   out_194009970418163548[47] = 0;
   out_194009970418163548[48] = 0;
   out_194009970418163548[49] = 0;
   out_194009970418163548[50] = 0;
   out_194009970418163548[51] = 0;
   out_194009970418163548[52] = 0;
   out_194009970418163548[53] = 1;
   out_194009970418163548[54] = 0;
   out_194009970418163548[55] = 0;
   out_194009970418163548[56] = 0;
   out_194009970418163548[57] = 0;
   out_194009970418163548[58] = 0;
   out_194009970418163548[59] = 0;
   out_194009970418163548[60] = 0;
   out_194009970418163548[61] = 0;
   out_194009970418163548[62] = 0;
   out_194009970418163548[63] = 0;
   out_194009970418163548[64] = 0;
   out_194009970418163548[65] = 0;
}
void h_32(double *state, double *unused, double *out_6894738059665748948) {
   out_6894738059665748948[0] = state[3];
   out_6894738059665748948[1] = state[4];
   out_6894738059665748948[2] = state[5];
   out_6894738059665748948[3] = state[6];
}
void H_32(double *state, double *unused, double *out_118611724469281480) {
   out_118611724469281480[0] = 0;
   out_118611724469281480[1] = 0;
   out_118611724469281480[2] = 0;
   out_118611724469281480[3] = 1;
   out_118611724469281480[4] = 0;
   out_118611724469281480[5] = 0;
   out_118611724469281480[6] = 0;
   out_118611724469281480[7] = 0;
   out_118611724469281480[8] = 0;
   out_118611724469281480[9] = 0;
   out_118611724469281480[10] = 0;
   out_118611724469281480[11] = 0;
   out_118611724469281480[12] = 0;
   out_118611724469281480[13] = 0;
   out_118611724469281480[14] = 0;
   out_118611724469281480[15] = 0;
   out_118611724469281480[16] = 0;
   out_118611724469281480[17] = 0;
   out_118611724469281480[18] = 0;
   out_118611724469281480[19] = 0;
   out_118611724469281480[20] = 0;
   out_118611724469281480[21] = 0;
   out_118611724469281480[22] = 0;
   out_118611724469281480[23] = 0;
   out_118611724469281480[24] = 0;
   out_118611724469281480[25] = 0;
   out_118611724469281480[26] = 1;
   out_118611724469281480[27] = 0;
   out_118611724469281480[28] = 0;
   out_118611724469281480[29] = 0;
   out_118611724469281480[30] = 0;
   out_118611724469281480[31] = 0;
   out_118611724469281480[32] = 0;
   out_118611724469281480[33] = 0;
   out_118611724469281480[34] = 0;
   out_118611724469281480[35] = 0;
   out_118611724469281480[36] = 0;
   out_118611724469281480[37] = 0;
   out_118611724469281480[38] = 0;
   out_118611724469281480[39] = 0;
   out_118611724469281480[40] = 0;
   out_118611724469281480[41] = 0;
   out_118611724469281480[42] = 0;
   out_118611724469281480[43] = 0;
   out_118611724469281480[44] = 0;
   out_118611724469281480[45] = 0;
   out_118611724469281480[46] = 0;
   out_118611724469281480[47] = 0;
   out_118611724469281480[48] = 0;
   out_118611724469281480[49] = 1;
   out_118611724469281480[50] = 0;
   out_118611724469281480[51] = 0;
   out_118611724469281480[52] = 0;
   out_118611724469281480[53] = 0;
   out_118611724469281480[54] = 0;
   out_118611724469281480[55] = 0;
   out_118611724469281480[56] = 0;
   out_118611724469281480[57] = 0;
   out_118611724469281480[58] = 0;
   out_118611724469281480[59] = 0;
   out_118611724469281480[60] = 0;
   out_118611724469281480[61] = 0;
   out_118611724469281480[62] = 0;
   out_118611724469281480[63] = 0;
   out_118611724469281480[64] = 0;
   out_118611724469281480[65] = 0;
   out_118611724469281480[66] = 0;
   out_118611724469281480[67] = 0;
   out_118611724469281480[68] = 0;
   out_118611724469281480[69] = 0;
   out_118611724469281480[70] = 0;
   out_118611724469281480[71] = 0;
   out_118611724469281480[72] = 1;
   out_118611724469281480[73] = 0;
   out_118611724469281480[74] = 0;
   out_118611724469281480[75] = 0;
   out_118611724469281480[76] = 0;
   out_118611724469281480[77] = 0;
   out_118611724469281480[78] = 0;
   out_118611724469281480[79] = 0;
   out_118611724469281480[80] = 0;
   out_118611724469281480[81] = 0;
   out_118611724469281480[82] = 0;
   out_118611724469281480[83] = 0;
   out_118611724469281480[84] = 0;
   out_118611724469281480[85] = 0;
   out_118611724469281480[86] = 0;
   out_118611724469281480[87] = 0;
}
void h_13(double *state, double *unused, double *out_5210003797918516289) {
   out_5210003797918516289[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_5210003797918516289[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_5210003797918516289[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_1664152559261893404) {
   out_1664152559261893404[0] = 0;
   out_1664152559261893404[1] = 0;
   out_1664152559261893404[2] = 0;
   out_1664152559261893404[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_1664152559261893404[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1664152559261893404[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_1664152559261893404[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_1664152559261893404[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_1664152559261893404[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_1664152559261893404[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_1664152559261893404[10] = 0;
   out_1664152559261893404[11] = 0;
   out_1664152559261893404[12] = 0;
   out_1664152559261893404[13] = 0;
   out_1664152559261893404[14] = 0;
   out_1664152559261893404[15] = 0;
   out_1664152559261893404[16] = 0;
   out_1664152559261893404[17] = 0;
   out_1664152559261893404[18] = 0;
   out_1664152559261893404[19] = 0;
   out_1664152559261893404[20] = 0;
   out_1664152559261893404[21] = 0;
   out_1664152559261893404[22] = 0;
   out_1664152559261893404[23] = 0;
   out_1664152559261893404[24] = 0;
   out_1664152559261893404[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_1664152559261893404[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_1664152559261893404[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1664152559261893404[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_1664152559261893404[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_1664152559261893404[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_1664152559261893404[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_1664152559261893404[32] = 0;
   out_1664152559261893404[33] = 0;
   out_1664152559261893404[34] = 0;
   out_1664152559261893404[35] = 0;
   out_1664152559261893404[36] = 0;
   out_1664152559261893404[37] = 0;
   out_1664152559261893404[38] = 0;
   out_1664152559261893404[39] = 0;
   out_1664152559261893404[40] = 0;
   out_1664152559261893404[41] = 0;
   out_1664152559261893404[42] = 0;
   out_1664152559261893404[43] = 0;
   out_1664152559261893404[44] = 0;
   out_1664152559261893404[45] = 0;
   out_1664152559261893404[46] = 0;
   out_1664152559261893404[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_1664152559261893404[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_1664152559261893404[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_1664152559261893404[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1664152559261893404[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_1664152559261893404[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_1664152559261893404[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_1664152559261893404[54] = 0;
   out_1664152559261893404[55] = 0;
   out_1664152559261893404[56] = 0;
   out_1664152559261893404[57] = 0;
   out_1664152559261893404[58] = 0;
   out_1664152559261893404[59] = 0;
   out_1664152559261893404[60] = 0;
   out_1664152559261893404[61] = 0;
   out_1664152559261893404[62] = 0;
   out_1664152559261893404[63] = 0;
   out_1664152559261893404[64] = 0;
   out_1664152559261893404[65] = 0;
}
void h_14(double *state, double *unused, double *out_1108062706504611441) {
   out_1108062706504611441[0] = state[10];
   out_1108062706504611441[1] = state[11];
   out_1108062706504611441[2] = state[12];
}
void H_14(double *state, double *unused, double *out_283790534674364486) {
   out_283790534674364486[0] = 0;
   out_283790534674364486[1] = 0;
   out_283790534674364486[2] = 0;
   out_283790534674364486[3] = 0;
   out_283790534674364486[4] = 0;
   out_283790534674364486[5] = 0;
   out_283790534674364486[6] = 0;
   out_283790534674364486[7] = 0;
   out_283790534674364486[8] = 0;
   out_283790534674364486[9] = 0;
   out_283790534674364486[10] = 1;
   out_283790534674364486[11] = 0;
   out_283790534674364486[12] = 0;
   out_283790534674364486[13] = 0;
   out_283790534674364486[14] = 0;
   out_283790534674364486[15] = 0;
   out_283790534674364486[16] = 0;
   out_283790534674364486[17] = 0;
   out_283790534674364486[18] = 0;
   out_283790534674364486[19] = 0;
   out_283790534674364486[20] = 0;
   out_283790534674364486[21] = 0;
   out_283790534674364486[22] = 0;
   out_283790534674364486[23] = 0;
   out_283790534674364486[24] = 0;
   out_283790534674364486[25] = 0;
   out_283790534674364486[26] = 0;
   out_283790534674364486[27] = 0;
   out_283790534674364486[28] = 0;
   out_283790534674364486[29] = 0;
   out_283790534674364486[30] = 0;
   out_283790534674364486[31] = 0;
   out_283790534674364486[32] = 0;
   out_283790534674364486[33] = 1;
   out_283790534674364486[34] = 0;
   out_283790534674364486[35] = 0;
   out_283790534674364486[36] = 0;
   out_283790534674364486[37] = 0;
   out_283790534674364486[38] = 0;
   out_283790534674364486[39] = 0;
   out_283790534674364486[40] = 0;
   out_283790534674364486[41] = 0;
   out_283790534674364486[42] = 0;
   out_283790534674364486[43] = 0;
   out_283790534674364486[44] = 0;
   out_283790534674364486[45] = 0;
   out_283790534674364486[46] = 0;
   out_283790534674364486[47] = 0;
   out_283790534674364486[48] = 0;
   out_283790534674364486[49] = 0;
   out_283790534674364486[50] = 0;
   out_283790534674364486[51] = 0;
   out_283790534674364486[52] = 0;
   out_283790534674364486[53] = 0;
   out_283790534674364486[54] = 0;
   out_283790534674364486[55] = 0;
   out_283790534674364486[56] = 1;
   out_283790534674364486[57] = 0;
   out_283790534674364486[58] = 0;
   out_283790534674364486[59] = 0;
   out_283790534674364486[60] = 0;
   out_283790534674364486[61] = 0;
   out_283790534674364486[62] = 0;
   out_283790534674364486[63] = 0;
   out_283790534674364486[64] = 0;
   out_283790534674364486[65] = 0;
}
void h_33(double *state, double *unused, double *out_2862768964100890701) {
   out_2862768964100890701[0] = state[16];
   out_2862768964100890701[1] = state[17];
   out_2862768964100890701[2] = state[18];
}
void H_33(double *state, double *unused, double *out_3344566975057021152) {
   out_3344566975057021152[0] = 0;
   out_3344566975057021152[1] = 0;
   out_3344566975057021152[2] = 0;
   out_3344566975057021152[3] = 0;
   out_3344566975057021152[4] = 0;
   out_3344566975057021152[5] = 0;
   out_3344566975057021152[6] = 0;
   out_3344566975057021152[7] = 0;
   out_3344566975057021152[8] = 0;
   out_3344566975057021152[9] = 0;
   out_3344566975057021152[10] = 0;
   out_3344566975057021152[11] = 0;
   out_3344566975057021152[12] = 0;
   out_3344566975057021152[13] = 0;
   out_3344566975057021152[14] = 0;
   out_3344566975057021152[15] = 0;
   out_3344566975057021152[16] = 1;
   out_3344566975057021152[17] = 0;
   out_3344566975057021152[18] = 0;
   out_3344566975057021152[19] = 0;
   out_3344566975057021152[20] = 0;
   out_3344566975057021152[21] = 0;
   out_3344566975057021152[22] = 0;
   out_3344566975057021152[23] = 0;
   out_3344566975057021152[24] = 0;
   out_3344566975057021152[25] = 0;
   out_3344566975057021152[26] = 0;
   out_3344566975057021152[27] = 0;
   out_3344566975057021152[28] = 0;
   out_3344566975057021152[29] = 0;
   out_3344566975057021152[30] = 0;
   out_3344566975057021152[31] = 0;
   out_3344566975057021152[32] = 0;
   out_3344566975057021152[33] = 0;
   out_3344566975057021152[34] = 0;
   out_3344566975057021152[35] = 0;
   out_3344566975057021152[36] = 0;
   out_3344566975057021152[37] = 0;
   out_3344566975057021152[38] = 0;
   out_3344566975057021152[39] = 1;
   out_3344566975057021152[40] = 0;
   out_3344566975057021152[41] = 0;
   out_3344566975057021152[42] = 0;
   out_3344566975057021152[43] = 0;
   out_3344566975057021152[44] = 0;
   out_3344566975057021152[45] = 0;
   out_3344566975057021152[46] = 0;
   out_3344566975057021152[47] = 0;
   out_3344566975057021152[48] = 0;
   out_3344566975057021152[49] = 0;
   out_3344566975057021152[50] = 0;
   out_3344566975057021152[51] = 0;
   out_3344566975057021152[52] = 0;
   out_3344566975057021152[53] = 0;
   out_3344566975057021152[54] = 0;
   out_3344566975057021152[55] = 0;
   out_3344566975057021152[56] = 0;
   out_3344566975057021152[57] = 0;
   out_3344566975057021152[58] = 0;
   out_3344566975057021152[59] = 0;
   out_3344566975057021152[60] = 0;
   out_3344566975057021152[61] = 0;
   out_3344566975057021152[62] = 1;
   out_3344566975057021152[63] = 0;
   out_3344566975057021152[64] = 0;
   out_3344566975057021152[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_5821450610139912524) {
  H(in_vec, out_5821450610139912524);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_8199502743948441299) {
  err_fun(nom_x, delta_x, out_8199502743948441299);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_8974206346724261763) {
  inv_err_fun(nom_x, true_x, out_8974206346724261763);
}
void live_H_mod_fun(double *state, double *out_2259405359203808161) {
  H_mod_fun(state, out_2259405359203808161);
}
void live_f_fun(double *state, double dt, double *out_7355999048988548228) {
  f_fun(state,  dt, out_7355999048988548228);
}
void live_F_fun(double *state, double dt, double *out_2793064135720303537) {
  F_fun(state,  dt, out_2793064135720303537);
}
void live_h_4(double *state, double *unused, double *out_8591242944923457004) {
  h_4(state, unused, out_8591242944923457004);
}
void live_H_4(double *state, double *unused, double *out_3172652086954443828) {
  H_4(state, unused, out_3172652086954443828);
}
void live_h_9(double *state, double *unused, double *out_1108062706504611441) {
  h_9(state, unused, out_1108062706504611441);
}
void live_H_9(double *state, double *unused, double *out_283790534674364486) {
  H_9(state, unused, out_283790534674364486);
}
void live_h_10(double *state, double *unused, double *out_842376979376852950) {
  h_10(state, unused, out_842376979376852950);
}
void live_H_10(double *state, double *unused, double *out_8552939557185869698) {
  H_10(state, unused, out_8552939557185869698);
}
void live_h_12(double *state, double *unused, double *out_7209938386305200071) {
  h_12(state, unused, out_7209938386305200071);
}
void live_H_12(double *state, double *unused, double *out_2551553061906850161) {
  H_12(state, unused, out_2551553061906850161);
}
void live_h_35(double *state, double *unused, double *out_1172154858295733565) {
  h_35(state, unused, out_1172154858295733565);
}
void live_H_35(double *state, double *unused, double *out_194009970418163548) {
  H_35(state, unused, out_194009970418163548);
}
void live_h_32(double *state, double *unused, double *out_6894738059665748948) {
  h_32(state, unused, out_6894738059665748948);
}
void live_H_32(double *state, double *unused, double *out_118611724469281480) {
  H_32(state, unused, out_118611724469281480);
}
void live_h_13(double *state, double *unused, double *out_5210003797918516289) {
  h_13(state, unused, out_5210003797918516289);
}
void live_H_13(double *state, double *unused, double *out_1664152559261893404) {
  H_13(state, unused, out_1664152559261893404);
}
void live_h_14(double *state, double *unused, double *out_1108062706504611441) {
  h_14(state, unused, out_1108062706504611441);
}
void live_H_14(double *state, double *unused, double *out_283790534674364486) {
  H_14(state, unused, out_283790534674364486);
}
void live_h_33(double *state, double *unused, double *out_2862768964100890701) {
  h_33(state, unused, out_2862768964100890701);
}
void live_H_33(double *state, double *unused, double *out_3344566975057021152) {
  H_33(state, unused, out_3344566975057021152);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
